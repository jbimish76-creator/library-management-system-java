import java.util.*; 
 
// ===== Book Class ===== 
class Book { 
    private int id; 
    private String title; 
    private String author; 
    private boolean isBorrowed; 
 
    public Book(int id, String title, String author) { 
        this.id = id; 
        this.title = title; 
        this.author = author; 
        this.isBorrowed = false; 
    } 
 
    public int getId() { return id; } 
    public String getTitle() { return title; } 
    public String getAuthor() { return author; } 
    public boolean isBorrowed() { return isBorrowed; } 
 
    public void borrowBook() { 
        if (!isBorrowed) { 
            isBorrowed = true; 
            System.out.println("    Book borrowed successfully!"); 
        } else { 
            System.out.println("    This book is already borrowed."); 
        } 
    } 
 
    public void returnBook() { 
        if (isBorrowed) { 
            isBorrowed = false; 
            System.out.println("    Book returned successfully!"); 
        } else { 
            System.out.println("    This book was not borrowed."); 
        } 
    } 
 
    @Override 
    public String toString() { 
        return "[" + id + "] " + title + " by " + author + 
               (isBorrowed ? " (Borrowed)" : " (Available)"); 
    } 
} 
 
// ===== Library Class ===== 
class Library { 
    private List<Book> books = new ArrayList<>(); 
 
    public void addBook(Book book) { 
        books.add(book); 
        System.out.println("    Book added successfully!"); 
    } 
 
    public void showAllBooks() { 
        if (books.isEmpty()) { 
            System.out.println("           No books in the library yet."); 
            return; 
        } 
        System.out.println("\n--- Library Books ---"); 
        for (Book book : books) { 
            System.out.println(book); 
        } 
    } 
 
    public Book findBookById(int id) { 
        for (Book book : books) { 
            if (book.getId() == id) 
                return book; 
        } 
        return null; 
    } 
 
    public void borrowBook(int id) { 
        Book book = findBookById(id); 
        if (book != null) 
            book.borrowBook(); 
        else 
            System.out.println("   Book not found!"); 
    } 
 
    public void returnBook(int id) { 
        Book book = findBookById(id); 
        if (book != null) 
            book.returnBook(); 
        else 
            System.out.println("   Book not found!"); 
    } 
} 
 
// ===== Main Class ===== 
public class LibraryManagementSystem { 
    public static void main(String[] args) { 
        Scanner sc = new Scanner(System.in); 
        Library library = new Library(); 
        int choice; 
 
        do { 
            System.out.println("\n=====        Library Management System ====="); 
            System.out.println("1. Add Book"); 
            System.out.println("2. Show All Books"); 
            System.out.println("3. Borrow Book"); 
            System.out.println("4. Return Book"); 
            System.out.println("0. Exit"); 
            System.out.print("Enter your choice: "); 
 
            while (!sc.hasNextInt()) { 
                System.out.println("   Invalid input! Please enter a number."); 
                sc.next(); 
            } 
            choice = sc.nextInt(); 
            sc.nextLine(); // consume newline 
 
            switch (choice) { 
                case 1: 
                    System.out.print("Enter Book ID: "); 
                    int id = sc.nextInt(); 
                    sc.nextLine(); 
                    System.out.print("Enter Book Title: "); 
                    String title = sc.nextLine(); 
                    System.out.print("Enter Author Name: "); 
                    String author = sc.nextLine(); 
                    library.addBook(new Book(id, title, author)); 
                    break; 
 
                case 2: 
                    library.showAllBooks(); 
                    break; 
 
                case 3: 
                    System.out.print("Enter Book ID to borrow: "); 
                    int borrowId = sc.nextInt(); 
                    library.borrowBook(borrowId); 
                    break; 
 
                case 4: 
                    System.out.print("Enter Book ID to return: "); 
                    int returnId = sc.nextInt(); 
                    library.returnBook(returnId); 
                    break; 
 
                case 0: 
                    System.out.println("     Exiting the system. Goodbye!"); 
                    break; 
 
                default: 
                    System.out.println("    Invalid choice, please try again."); 
            } 
        } while (choice != 0); 
 
        sc.close(); 
    } 
} 
